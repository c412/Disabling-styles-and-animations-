const storage = chrome.storage.sync;document.getElementById('enableAll').addEventListener('click', enableAllStyles);const styleButtons = {    'height': document.getElementById('disableHeight'),    'overflow-y': document.getElementById('disableOverflow'),    'margin': document.getElementById('disableMargin'),    'padding': document.getElementById('disablePadding'),    'box-sizing': document.getElementById('disableBoxSizing'),    'display': document.getElementById('disableDisplay'),    'background': document.getElementById('disableBackground'),    'position': document.getElementById('disablePosition'),    'opacity': document.getElementById('disableOpacity'),    'transition': document.getElementById('disableTransition'),    'transform': document.getElementById('disableTransform')};function initializeButtons() {    storage.get(Object.keys(styleButtons), (result) => {        Object.keys(styleButtons).forEach(styleProperty => {            const isDisabled = result[styleProperty];            styleButtons[styleProperty].classList.toggle('active', isDisabled);            if (isDisabled) {                styleButtons[styleProperty].classList.add('disabled');            }        });    });}window.onload = function () {    initializeButtons();    Object.keys(styleButtons).forEach(styleProperty => {        styleButtons[styleProperty].addEventListener('click', () => {            toggleStyle(styleProperty);        });    });};function enableAllStyles() {    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {        chrome.scripting.executeScript({            target: { tabId: tabs[0].id },            function: removeStyleClasses        });    });    resetButtonStates();}function toggleStyle(styleProperty) {    chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {        chrome.scripting.executeScript({            target: { tabId: tabs[0].id },            function: toggleClass,            args: [styleProperty]        });    });    toggleButtonState(styleButtons[styleProperty]);    saveButtonState(styleProperty);}function removeStyleClasses() {    const elements = document.querySelectorAll('*');    elements.forEach(element => {        Object.keys(styleButtons).forEach(styleProperty => {            element.classList.remove(`${styleProperty}-disabled`);        });    });}function toggleClass(styleProperty) {    const elements = document.querySelectorAll('*');    elements.forEach(element => {        element.classList.toggle(`${styleProperty}-disabled`);    });}function toggleButtonState(button) {    button.classList.toggle('active');    if (button.classList.contains('active')) {        button.classList.add('disabled');    }}function saveButtonState(styleProperty) {    const isDisabled = styleButtons[styleProperty].classList.contains('disabled');    storage.set({ [styleProperty]: isDisabled });}function resetButtonStates() {    Object.keys(styleButtons).forEach(styleProperty => {        styleButtons[styleProperty].classList.remove('active', 'disabled');        storage.set({ [styleProperty]: false });    });}